package project0;

import java.io.File;
import java.util.Scanner;

public class ArrayWarmup {
	
	//sorting method
	//takes in an array of strings and sorts it from lowest value to highest
	public void sort(String[] a) {
		for (int i = 0; i < 26; i++) {
			for (int j = 1; j < (26 - 1); j++) {
				if (a[j - 1].compareTo(a[j]) > 0) {
					String temp = a[j - 1];
					a[j - 1] = a[j];
					a[j] = temp;
				}
			}
		}
	}
	
	//search method
	//takes in an array of strings and searches through it to find the string a user wants to find
	//uses bubble search
	public void search(String[] a) {
		Scanner scnr = new Scanner(System.in);
		int middle;
		int bottomHalf = 0;
		int topHalf = a.length - 1;
		//bottomHalf is always less than topHalf so this will infinitely repeat
		while (bottomHalf <= topHalf) {
			System.out.println("What word would you like to search for? Enter '0' to stop searching");
			String userInput;
			userInput = scnr.next();
			//the array will be searched through as long as the user wants to find a string
			while (!userInput.equals("0")) {
				middle = bottomHalf + (topHalf - bottomHalf) / 2;
				//if the user string is the same as the string in the middle of the section the string was found in the array
				if (a[middle].equals(userInput)) {
					System.out.println("We found " + userInput + " at index " + middle);
					topHalf = a.length - 1;
					bottomHalf = 0;
					middle = bottomHalf + (topHalf - bottomHalf) / 2;
					break;
				}
				//if the string in the middle of the section has a higher value than the user string
				//ignore the top half of the array by setting the middle to be one less than previously
				else if (a[middle].compareTo(userInput) > 0) {
					topHalf = middle - 1;
					middle = topHalf;
				}
				//if the string in the middle of the section has a lower value than the user string
				//ignore the bottom half of the array by setting the middle to be one higher than previously
				else {
					bottomHalf = middle + 1;
					middle = bottomHalf;
				}
				
				//if the bottom half becomes larger than the top half
				//the user string is not in the array
				//resets values and asks user to search again
				if (bottomHalf > topHalf) {
					System.out.println("We couldn't find your input of " + userInput);
					System.out.println("What word would you like to search for? Enter '0' to stop searching");
					userInput = scnr.next();
					topHalf = a.length - 1;
					bottomHalf = 0;
					middle = bottomHalf + (topHalf - bottomHalf) / 2;
				}
			}
			
			//if the user enters in "0" the program will stop asking and searching for strings
			if (userInput.equals("0")) {
				System.out.println("Quitting");
				break;
			}
		}
	}
	
	//takes in an array of strings and prints out each value at each index
	public void print(String[] a) {
		for (int i = 0; i < a.length; i++) {
			System.out.println(a[i]);
		}
	}

	public static void main(String[] args) throws Exception {
		//creates file object using "text.txt" file
		File file = new File("text.txt");
		Scanner sc = new Scanner(file);
		String[] myArray = new String[25];
		int counter = 0;
		ArrayWarmup aw = new ArrayWarmup();
		
		//inputting strings into array from file
		while (sc.hasNext()) {
			myArray[counter] = sc.next();
			System.out.println(myArray[counter]);
			counter++;
		}

		System.out.println("");
		
		//sorting
		aw.sort(myArray);
		
		//prints out sorted array
		aw.print(myArray);
		
		//searches array
		aw.search(myArray);
	}
}
